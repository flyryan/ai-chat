name: Deploy Backend to Azure App Service

on:
  push:
    branches: [ main, release-prep ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Add debug step before creating settings JSON
    - name: Debug Settings
      run: |
        cd backend
        # Create temporary .env for debug
        echo "APP_NAME=\"${{ secrets.APP_NAME }}\"" > .env
        echo "OPENAI_API_KEY=\"${{ secrets.OPENAI_API_KEY }}\"" >> .env
        echo "OPENAI_API_BASE=\"${{ secrets.OPENAI_API_BASE }}\"" >> .env
        echo "OPENAI_API_VERSION=\"${{ secrets.OPENAI_API_VERSION }}\"" >> .env
        echo "OPENAI_DEPLOYMENT_NAME=\"${{ secrets.OPENAI_DEPLOYMENT_NAME }}\"" >> .env
        echo "VECTOR_SEARCH_ENABLED=\"${{ secrets.VECTOR_SEARCH_ENABLED }}\"" >> .env
        echo "VECTOR_SEARCH_ENDPOINT=\"${{ secrets.VECTOR_SEARCH_ENDPOINT }}\"" >> .env
        echo "VECTOR_SEARCH_KEY=\"${{ secrets.VECTOR_SEARCH_KEY }}\"" >> .env
        echo "VECTOR_SEARCH_INDEX=\"${{ secrets.VECTOR_SEARCH_INDEX }}\"" >> .env
        echo "CORS_ORIGINS=\"${{ secrets.CORS_ORIGINS }}\"" >> .env
        echo "SYSTEM_PROMPT=\"${{ secrets.SYSTEM_PROMPT }}\"" >> .env
        
        echo "Running debug script..."
        python debug_settings.py
        
        # Clean up temporary .env
        rm .env

    - name: Create settings JSON
      run: |
        echo '{
          "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "true",
          "APP_NAME": "${{ secrets.APP_NAME }}",
          "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
          "OPENAI_API_BASE": "${{ secrets.OPENAI_API_BASE }}",
          "OPENAI_API_VERSION": "${{ secrets.OPENAI_API_VERSION }}",
          "OPENAI_DEPLOYMENT_NAME": "${{ secrets.OPENAI_DEPLOYMENT_NAME }}",
          "VECTOR_SEARCH_ENABLED": "${{ secrets.VECTOR_SEARCH_ENABLED }}",
          "VECTOR_SEARCH_ENDPOINT": "${{ secrets.VECTOR_SEARCH_ENDPOINT }}",
          "VECTOR_SEARCH_KEY": "${{ secrets.VECTOR_SEARCH_KEY }}",
          "VECTOR_SEARCH_INDEX": "${{ secrets.VECTOR_SEARCH_INDEX }}",
          "CORS_ORIGINS": "${{ secrets.CORS_ORIGINS }}",
          "SYSTEM_PROMPT": "${{ secrets.SYSTEM_PROMPT }}"
        }' > appsettings.json

    - name: Configure App Settings
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az webapp config appsettings set \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --settings @appsettings.json

    - name: Configure startup command
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az webapp config set \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --startup-file "gunicorn main:app --config gunicorn.conf.py"

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
        package: backend

    - name: Check application logs
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Fetching application logs..."
          az webapp log tail \
            --name ${{ secrets.WEBAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }}

    - name: Verify health endpoint
      run: |
        echo "Checking health endpoint..."
        for i in {1..3}; do
          echo "Attempt $i..."
          curl -v https://${{ secrets.WEBAPP_NAME }}.azurewebsites.net/health || true
          sleep 5
        done